name: Frontend CI

on:
  workflow_call:
    inputs:
      do_push:
        required: true
        type: boolean

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Install packages on runner 📦
        run: |
          sudo apt update
          sudo apt install git-lfs
      - name: Checkout Repository 🛎️
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./frontend/node_modules
          key: npm-${{ hashFiles('frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./frontend
        run: npm ci --ignore-scripts --legacy-peer-deps
      - name: Build
        working-directory: ./frontend
        run: npm run build
      - name: Docker build 🐳
        run: docker build -f frontend/Dockerfile frontend/
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: inputs.do_push
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: kaktus42acc/medconb-frontend
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - if: inputs.do_push
        name: Build & push Docker image 🐳
        uses: docker/build-push-action@v6
        with:
          context: frontend/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
